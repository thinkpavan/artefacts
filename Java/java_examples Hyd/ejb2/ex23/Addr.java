package oto;

import java.io.Serializable;
import java.util.*;
import javax.ejb.*;
import javax.naming.*;
import javax.sql.DataSource;
import java.sql.*;



abstract public class Addr implements EntityBean {
  private EntityContext ctx;
// need not declare fields to hold data. This will be done by code
// that is automatically generated by container specific tools.

	public Addr() {};

  public void setEntityContext(EntityContext ctx) {
    this.ctx = ctx;
  }

  public void unsetEntityContext() {
    this.ctx = null;
  }

	//declare get/set abstract methods for container managed fields
	abstract public String getId();
	abstract public void setId(String val);

	abstract public String getAddr();
	abstract public void setAddr(String val);

  public void ejbActivate() {
  }


  public void ejbPassivate() {
  }


  public void ejbLoad() {
	System.out.println(" addr : ejb load");
  }


  public void ejbStore() {
	System.out.println(" addr : ejb store");
  }


  public void ejbRemove()
    throws RemoveException
  {
	System.out.println(" addr : ejb remove");
  }


  public String  ejbCreate(String studid,String addr) 
    throws CreateException
  {
	System.out.println("addr : In ejb create ");
    setId(studid);
    setAddr(addr);
    return null; 
  }


  public void  ejbPostCreate(String studid,String addr) 
  {
	System.out.println("addr : In ejb post create ");
  }
  public String getData(){
	return "Adddress Data : "+ getId() + getAddr();
  }


}











