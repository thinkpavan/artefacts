
<project name="jsflogin" default="build" basedir=".">
  <target name="init" depends="verifyPreconditions">
      <tstamp/>
  </target>


  <!-- Configure properties for this application -->

  <property name="jsf.home" value="D:/jsf_latest/jsf-1_0" />
  <property name="tomcat.home"   value="D:/Program Files/Apache Group/Tomcat 5.0.16" />
  <property name="jwsdp.home" value="D:/jwsdp-1.3" />

  <property name="example" value="jsflogin" />
  <property name="build"   value="${basedir}/build" />




  <!-- Required jobs for making this self-contained -->

  <property name="jsf-api.jar"
            value="${jsf.home}/lib/jsf-api.jar" />
  <property name="jsf-impl.jar"
            value="${jsf.home}/lib/jsf-impl.jar" />

  <property name="servlet.jar" value="${tomcat.home}/common/lib/servlet-api.jar"/>
  <property name="jsp.jar" value="${tomcat.home}/common/lib/jsp-api.jar"/>
  <property name="commons-beanutils.jar" 
            value="${tomcat.home}/server/lib/commons-beanutils.jar"/>
  <property name="commons-digester.jar" 
            value="${tomcat.home}/server/lib/commons-digester.jar"/>

  <property name="commons-logging.jar" 
            value="${jwsdp.home}/jwsdp-shared/lib/commons-logging.jar"/>
  <property name="commons-collections.jar" 
            value="${jwsdp.home}/jwsdp-shared/lib/commons-collections.jar"/>
  <property name="jstl.jar" value="${jwsdp.home}/jstl/lib/jstl.jar"/>
  <property name="standard.jar" value="${jwsdp.home}/jstl/lib/standard.jar"/>



  <path id="classpath">
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/> 
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${jsf-api.jar}"/>
    <pathelement location="${jsf-impl.jar}"/>
    <pathelement location="${jstl.jar}"/>
    <pathelement location="${build}/${example}/WEB-INF/classes"/>
    <pathelement location="${servlet.jar}"/>
  </path>

  <target name="clean" >
    <delete dir="${build}" />
  
  </target>

  <target name="verifyPreconditions">

    <antcall target="checkRequiredFile">
       <param name="file" value="${servlet.jar}"/>
       <param name="fail.message" value="A jar file containing the Servlet 2.3 and JSP1.2 classes is required to compile this sample.  Please define the property servlet.jar file and ensure that the file exists."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-beanutils.jar}"/>
       <param name="fail.message" value="${commons-beanutils.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-digester.jar}"/>
       <param name="fail.message" value="${commons-digester.jar} must exist."/>
    </antcall>


    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-logging.jar}"/>
       <param name="fail.message" value="${commons-logging.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-collections.jar}"/>
       <param name="fail.message" value="${commons-collections.jar} must exist."/>
    </antcall>


    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-api.jar}"/>
       <param name="fail.message" value="${jsf-api.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-impl.jar}"/>
       <param name="fail.message" value="${jsf-impl.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${standard.jar}"/>
       <param name="fail.message" value="${standard.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jstl.jar}"/>
       <param name="fail.message" value="${jstl.jar} must exist."/>
    </antcall>

  </target>

  <target name="prepare" depends="init"
        description="Create build directories.">
    <mkdir dir="${build}/${example}" />
    <mkdir dir="${build}/${example}/WEB-INF" />
    <mkdir dir="${build}/${example}/WEB-INF/classes" />
    <mkdir dir="${build}/${example}/WEB-INF/lib" />
  </target>

  <!-- Executable Targets -->

  <target name="build" depends="deploy.copyJars"
     description="Compile Java files and copy static files." >
    <javac srcdir="src" destdir="${build}/${example}/WEB-INF/classes">
    	<include name="**/*.java" />
     <classpath refid="classpath"/>
    </javac>
    <copy todir="${build}/${example}/WEB-INF">
        <fileset dir="web/WEB-INF">
        <include name="*.xml" />
        <include name="*.tld" />
      </fileset>
    </copy>

     <copy todir="${build}/${example}/">
      <fileset dir="web">
        <include name="*.html" />
        <include name="*.gif" />
        <include name="*.jpg" />
        <include name="*.jsp" />
        <include name="*.xml" />
      </fileset>
    </copy>

    <copy todir="${build}/${example}/WEB-INF/classes/" >
      <fileset dir="src" >
         <include name="**/*.properties"/>
      </fileset>
    </copy>

    <copy todir="${build}/${example}/css/" >
      <fileset dir="web/css" >
         <include name="*.css"/>
      </fileset>
    </copy>



    <jar jarfile="${example}.war" basedir="${build}/${example}"/>
    <copy todir=".." file="${example}.war" />
    <copy todir="${tomcat.home}/webapps" file="${example}.war" />
    <delete file="${example}.war" />
  </target>	 

  <target name="deploy.copyJars" unless="build.standalone">
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-beanutils.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-collections.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-logging.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-digester.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${jsf-api.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${jsf-impl.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${jstl.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${standard.jar}" />
  </target>

  <target name="checkRequiredFile">
    <available file="${file}" property="requirement.satisfied"/>
    <antcall target="checkRequired.fail"/>
  </target>

  <target name="checkRequired.fail" unless="requirement.satisfied">
    <fail message="${fail.message}"/>
  </target>

</project>

